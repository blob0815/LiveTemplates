<templateSet group="TechTalk">
  <template name="2_mock" value="@org.mockito.Mock lateinit private var $NAME$: $TYPE$" toReformat="true" toShortenFQNames="true">
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NAME" expression="kotlinSuggestVariableName()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_STATEMENT" value="true" />
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="1_before" value="@org.junit.Before&#10;fun setUp(){&#10;    $END$&#10;}" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="3_suppress" value="@kotlin.Suppress($WHAT$)" toReformat="true" toShortenFQNames="true">
    <variable name="WHAT" expression="enum(&quot;\&quot;UNCHECKED_CAST\&quot;&quot;, &quot;\&quot;UNUSED_PARAMETER\&quot;&quot;, &quot;\&quot;SENSELESS_COMPARISON\&quot;&quot;, &quot;\&quot;IMPLICIT_CAST_TO_ANY\&quot;&quot;, &quot;\&quot;CAST_NEVER_SUCCEEDS\&quot;&quot;)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
      <option name="OC_EXPRESSION_C" value="false" />
      <option name="OC_DECLARATION_CPP" value="false" />
      <option name="c" value="false" />
      <option name="OC_STATEMENT_C" value="false" />
      <option name="cpp" value="false" />
      <option name="OC_DECLARATION_C" value="false" />
      <option name="OC_EXPRESSION_CPP" value="false" />
      <option name="OC_STATEMENT_CPP" value="false" />
    </context>
  </template>
  <template name="4_fore" value="for ($VAR$ in $ITERABLE$) {&#10;$END$&#10;}" description="Iterate over elements of iterable (for-in loop)" toReformat="true" toShortenFQNames="true">
    <variable name="ITERABLE" expression="kotlinVariable()" defaultValue="&quot;iterable&quot;" alwaysStopAt="true" />
    <variable name="VAR" expression="kotlinSuggestVariableName()" defaultValue="&quot;it&quot;" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_STATEMENT" value="true" />
    </context>
  </template>
  <template name="5_ifn" value="if ($VAR$ == null) {&#10;$END$&#10;}" description="Inserts ''if null'' expression" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="kotlinVariable()" defaultValue="&quot;i&quot;" alwaysStopAt="true" />
  </template>
  <template name="6_then" value="com.nhaarman.mockito_kotlin.then($MOCK$).should($MODIFIER$).$METHOD_CALL$" description="add a then statement" toReformat="false" toShortenFQNames="true">
    <variable name="MOCK" expression="kotlinVariable()" defaultValue="" alwaysStopAt="true" />
    <variable name="MODIFIER" expression="enum(&quot;&quot;, &quot;times(1)&quot;, &quot;times(2)&quot;, &quot;times(3)&quot;, &quot;times(4)&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="METHOD_CALL" expression="complete()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_STATEMENT" value="true" />
    </context>
  </template>
  <template name="7_simple_groovy_script" value="$GROOVY$" toReformat="false" toShortenFQNames="true">
    <variable name="GROOVY" expression="groovyScript(&quot;\&quot;${_1} ${_2}\&quot;.toString()&quot;, &quot;Hello&quot;, &quot;World&quot;)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="8_mock2" value="@org.mockito.Mock lateinit private var $NAME$: $TYPE$" toReformat="true" toShortenFQNames="true">
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NAME" expression="groovyScript(&quot;String result = _1 == null ? \&quot;\&quot; : _1.split(\&quot;\\\\.\&quot;).last().split(\&quot;&lt;\&quot;).first();result == \&quot;\&quot; ? \&quot;\&quot; : result.substring(0, 1).toLowerCase() + result.substring(1)&quot;, TYPE)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_STATEMENT" value="true" />
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
</templateSet>